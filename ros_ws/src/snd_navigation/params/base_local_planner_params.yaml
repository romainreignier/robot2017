TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.0
  acc_lim_y: 0.0
  acc_lim_theta:  20.0

  max_vel_x: 1.0
  min_vel_x: 0.0

  max_vel_theta: 2.0
  min_vel_theta: -2.0
  min_in_place_vel_theta: 1.0
  min_in_rotational_vel: 1.0

  trans_stopped_vel: 0.5
  rot_stopped_vel: 0.5

  holonomic_robot: false
  global_frame_id: odom
  escape_vel: -0.2 # vitesse a laquelle le robot peut reculer quand il est coince. Positif si le robot ne peut physiquement pas reculer

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.15
  xy_goal_tolerance: 0.01
  latch_xy_goal_tolerance: false

  # Forward Simulation Parameters
  sim_time: 1.0
  sim_granularity: 0.01
  angular_sim_granularity: 0.02
  vx_samples: 10
  vtheta_samples: 10
  controller_frequency: 5.0

  # Trajectory scoring parameters
  meter_scoring: true # Whether the gdist_scale and pdist_scale parameters should assume that goal_distance and path_distance are expressed in units of meters or cells. Cells are assumed by default (false).
  occdist_scale:  0.01 # The weighting for how much the controller should attempt to avoid obstacles. default 0.01
  pdist_scale: 0.6     # The weighting for how much the controller should stay close to the path it was given . default 0.6
  gdist_scale: 0.8     # The weighting for how much the controller should attempt to reach its local goal, also controls speed  default 0.8

  heading_lookahead: 0.4        # How far to look ahead in meters when scoring different in-place-rotation trajectories
  heading_scoring: false        # Whether to score based on the robot's heading to the path or its distance from the path. default false
  heading_scoring_timestep: 0.8 # How far to look ahead in time in seconds along the simulated trajectory when using heading scoring (double, default: 0.8)
  dwa: false                     # Whether to use the Dynamic Window Approach (DWA)_ or whether to use Trajectory Rollout
  simple_attractor: false
  publish_cost_grid_pc: false

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.05   # How far the robot must travel in meters before oscillation flags are reset (double, default: 0.05)
  escape_reset_dist: 0.1
  escape_reset_theta: 0.1
