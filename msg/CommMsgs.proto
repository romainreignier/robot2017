syntax = "proto2";

package snd_msgs;

message EmptyMsg
{
}

message Point
{
     required float x = 1;
     required float y = 2;
}

message Pose
{
     required float x  = 1;
     required float y  = 2;
     required float th = 3;
}

message Speed
{
    required float left  = 1;
    required float right = 2;
}

message Encoders
{
     required int32 left  = 1;
     required int32 right = 2;
}

message PidTunings
{
     required float p = 1;
     required float i = 2;
     required float d = 3;
}

message Ir
{
    required bool left = 1;
    required bool center = 2;
    required bool right = 3;
}

message Status
{
    required Pose     pose     = 1;
    required Speed    speed    = 2;
    required bool     starter  = 3;
    required bool     estop    = 4;
    required Ir       ir       = 5;
    required Encoders encoders = 6;
}

message Log
{
     required uint32    stamp = 1;
     enum eLogLevel
     {
         DEBUG = 0;
         INFO  = 1;
         WARN  = 2;
         ERROR = 3;
         FATAL = 4;
     }
     required eLogLevel level = 2 [default = INFO];
     required string    text  = 3;
}

// Message Multiplexer
message SerialRequest
{
    oneof type
    {
        EmptyMsg   getStatus        = 1;
        EmptyMsg   getEncoders      = 2;
        EmptyMsg   getPosition      = 3;
        EmptyMsg   getMotorsSpeed   = 4;
        EmptyMsg   getPidSpeedLeft  = 5;
        EmptyMsg   getPidSpeedRight = 6;
        EmptyMsg   getStarterState  = 7;
        
        Speed      setMotorsSpeed   = 10;
        PidTunings setPidSpeedLeft  = 11;
        PidTunings setPidSpeedRight = 12;
        Encoders   setEncoders      = 13;
    }
}

message SerialResponse
{
    oneof type
    {
        Log        log           = 1;
        Encoders   encoders      = 2;
        Pose       pose          = 3;
        Speed      speed         = 4;
        PidTunings pidSpeedLeft  = 5; 
        PidTunings pidSpeedRight = 6;
        bool       isStarterSet  = 7;
        Status     status        = 8;
    }
} 
